name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Create Lambda Layer
        run: |
          cd backend
          mkdir -p python
          pip install \
            --platform manylinux2014_x86_64 \
            --target=python \
            --implementation cp \
            --python-version 3.9 \
            --only-binary=:all: \
            --upgrade \
            -r requirements.txt
          zip -r layer.zip python

      - name: Deploy Lambda Layer
        run: |
          # Check if the function exists
          FUNCTION_EXISTS=$(aws lambda get-function --function-name my-lambda-function 2>&1 || echo "FunctionNotFound")
          
          if [[ $FUNCTION_EXISTS == *"FunctionNotFound"* ]]; then
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name my-lambda-function \
              --runtime python3.9 \
              --role arn:aws:iam::010526276172:role/service-role/my-lambda-function-role-9cf701d9 \
              --handler lambda_function.lambda_handler \
              --zip-file fileb://backend/layer.zip \
              --region $AWS_REGION
          else
            echo "Updating existing Lambda function..."
            aws lambda update-function-code \
              --function-name my-lambda-function \
              --zip-file fileb://backend/layer.zip \
              --publish \
              --region $AWS_REGION
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
